apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
    maven { url 'http://files.couchbase.com/maven2/' }
    mavenCentral()
    mavenLocal()
}

def buildJavascriptWithArtifacts = System.getProperty("buildJavascriptWithArtifacts")

dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.11'

    // as discovered by trial and error, the build will fail if "compile" is
    // used: Error: duplicate files during packaging of APK.  I guess it is
    // being implicitly included by being in the libs folder, and then "double included"
    // because of a "compile" directive to explicitly include the jar.
    testCompile fileTree(dir: 'libs', include: 'td_collator_so.jar')

    compile 'org.mozilla:rhino:1.7R3'

    compile buildJavascriptWithArtifacts == null ?
            project(':libraries:couchbase-lite-java-core') :
            'com.couchbase.lite:couchbase-lite-java-core:' + System.getenv("MAVEN_UPLOAD_VERSION")

}

task createMavenDirectory(type: Exec) {

    ext {
        uploadUser = System.getenv("MAVEN_UPLOAD_USERNAME") + ":" + System.getenv("MAVEN_UPLOAD_PASSWORD")
        mkcolPath  = System.getenv("MAVEN_UPLOAD_REPO_URL") + "com/couchbase/lite/couchbase-lite-java-javascript/" + System.getenv("MAVEN_UPLOAD_VERSION") + "/"
    }
    commandLine "curl", "--user", uploadUser, "-X", "MKCOL", mkcolPath
}

// this hack is only needed for apache mod_dav based Maven repo's like file.couchbase.com.  otherwise, skip it
createMavenDirectory.onlyIf { System.getenv("MAVEN_UPLOAD_REPO_URL").contains("files") }

task uploadArchivesWrapper(dependsOn: createMavenDirectory) << {
    uploadArchives.execute()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getenv("MAVEN_UPLOAD_REPO_URL")) {
                authentication(userName: System.getenv("MAVEN_UPLOAD_USERNAME"), password: System.getenv("MAVEN_UPLOAD_PASSWORD"))
            }
            pom.version = System.getenv("MAVEN_UPLOAD_VERSION") != null ? System.getenv("MAVEN_UPLOAD_VERSION") : ''
            pom.groupId = 'com.couchbase.lite'
            pom.artifactId = 'couchbase-lite-java-javascript'
            pom.project {
                name 'com.couchbase.lite:couchbase-lite-java-javascript'
                description 'This allows you to use Javascript in map/reduce views, as opposed to native Java code (the default behavior for Couchbase-Lite).'
                url 'http://developer.couchbase.com/mobile/'
                licenses {
                    license {
                        name 'Couchbase, Inc. Community Edition License Agreement'
                        url 'https://www.couchbase.com/binaries/content/assets/website/legal/ce-license-agreement.pdf'
                        distribution 'repo'
                    }
                }
                scm {
                    url 'http://developer.couchbase.com/mobile/'
                    connection 'scm:git@github.com:couchbase/couchbase-lite-java-javascript.git'
                    developerConnection 'scm:git@github.com:couchbase/couchbase-lite-java-javascript.git'
                }
                developers {
                    developer {
                        name 'Couchbase Mobile'
                        email 'mobile@couchbase.com'
                        organization 'Couchbase'
                        organizationUrl 'http://www.couchbase.com'
                    }
               }
            }
        }
    }
}

